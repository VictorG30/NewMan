{
	"info": {
		"_postman_id": "3fbc13ac-0bf7-43d4-a81d-c202279ef34d",
		"name": "GNS Automated Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10455935",
		"_collection_link": "https://speeding-comet-322671.postman.co/workspace/NewsCorp~4c25f6aa-f2c5-4323-b5fc-c5c0df17e560/collection/10455935-3fbc13ac-0bf7-43d4-a81d-c202279ef34d?action=share&source=collection_link&creator=10455935"
	},
	"item": [
		{
			"name": "Staging Smoke Test",
			"item": [
				{
					"name": "Ingest Panels",
					"item": [
						{
							"name": "Ingest Single Story Bullets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelBullets\");",
											"    var source = pm.globals.get(\"source\");",
											"    ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var isodate = new Date().toISOString()",
											"pm.globals.set(\"date\", isodate);",
											"",
											"var id = pm.globals.get(\"idPanelBullets\");",
											"var a = parseInt(id);",
											"",
											"var numRandom = Math.round(Math.random() * 1000000000);",
											"var idfin = a + numRandom;",
											"console.log(\"Id created panel: \" + idfin)",
											"pm.globals.set(\"idPanelBullets\", idfin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"description": "Default GCAPINP dev Ingestion ApiKey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{idPanelBullets}}-{{source}}-{{idSite}}\",\n    \"createdDate\": \"{{date}}\",\n    \"updatedDate\": \"{{date}}\",\n    \"publisher\":\"{{source}}\",\n    \"content\": \"<entry><id>https://www.{{source}}.com/money/15395677/single-first-time-home-buyer-tips/?id={{idPanelBullets}}</id><published>{{date}}</published><updated>{{date}}</updated><g:panel type=\\\"SINGLE_STORY\\\">https://www.{{source}}.com/money/15395677/single-first-time-home-buyer-tips/?id={{idPanelBullets}}</g:panel><g:panel_title>Six things you need to know if you're a single first-time home</g:panel_title><g:overline>Six things yo</g:overline><title>Created by postman</title><author><name> Victor Garcia {{idPanelBullets}}-{{source}} </name></author><link href=\\\"https://www.{{source}}.com/money/15395677/single-first-time-home-buyer-tips/?id={{idPanelBullets}}\\\"/><media:content url=\\\"https://content.capi-stage.newscorp.com/images/77cdfd73bcba8a969accb6ac12cf2856?combo2to1=1200\\\"></media:content><g:bullet_list><g:list_item>Emmerdale spoilers LIVE: Shock affair for David &amp; Victoria plus EastEnders &amp; Coronation Street latest updates</g:list_item><g:list_item href=\\\"https://{{source}}.com/news/article-2\\\">Bullet Postman {{idPanelBullets}}-{{source}} </g:list_item><g:list_item>Bullet Postman {{idPanelBullets}}-{{source}} </g:list_item></g:bullet_list></entry>\",\n    \"user\": \"johndue@gmail.com\",\n    \"domain\": \"http://news-showcase-develop.showcase.newspress.app\",\n    \"originalArticle\": [\n      {\n        \"mainArticle\": true,\n        \"gcapiId\": \"d74abab27e11956757d7c91135a98520\",\n        \"title\": \"Six things you need to know if you're a single first-time home buyer\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"836b71c154bee98a446dd5287b93bd78\",\n        \"title\": \"Emmerdale spoilers LIVE: Shock affair for David &amp; Victoria plus EastEnders &amp; Coronation Street latest updates\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"daf38a3883cee4a7bb4c407b70810340\",\n        \"title\": \"Why Nuno Espirito Santo is right man to rebuild Tottenham, even after 67 days and TEN other candidates\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"46a0ed60ca96842537e1a02ca410d029\",\n        \"title\": \"Mum claims tumble dryer sheets are the secret to keeping bugs away in the summer\"\n      }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/ingest/processors/GSHOWCASE",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"ingest",
										"processors",
										"GSHOWCASE"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ingest Single Story Key Moments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelKeyMoments\");",
											"    var source = pm.globals.get(\"source\");",
											"    ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var isodate = new Date().toISOString()",
											"pm.globals.set(\"date\", isodate);",
											"",
											"var id = pm.globals.get(\"idPanelKeyMoments\");",
											"var a = parseInt(id);",
											"",
											"var numRandom = Math.round(Math.random() * 1000000000);",
											"var idfin = a + numRandom;",
											"console.log(\"Id created panel: \" + idfin)",
											"pm.globals.set(\"idPanelKeyMoments\", idfin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"description": "Default GCAPINP dev Ingestion ApiKey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\n    \"id\": \"{{idPanelKeyMoments}}-{{source}}-{{idSite}}\",\n    \"createdDate\": \"{{date}}\",\n    \"updatedDate\": \"{{date}}\",\n    \"publisher\":\"{{source}}\",\n    \"content\": \"<entry><id>https://www.{{source}}.com/tvandshowbiz/15413535/maya-jama-pictured-rumours-date-night-ben-simmons/?gid={{idPanelKeyMoments}}</id><published>{{date}}</published><updated>{{date}}</updated><g:panel type=\\\"SINGLE_STORY\\\">https://www.{{source}}.com/tvandshowbiz/15413535/maya-jama-pictured-rumours-date-night-ben-simmons/?gid={{idPanelKeyMoments}}</g:panel><g:panel_title>Maya Jama</g:panel_title><g:overline>Maya Jama pictured</g:overline><title>Maya Jama pictured leaving restaurant with rumoured love interest NBA star Ben Simmons</title><author><name>Dan Cain</name></author><link href=\\\"https://www.{{source}}.com/tvandshowbiz/15413535/maya-jama-pictured-rumours-date-night-ben-simmons/?gid={{idPanelKeyMoments}}\\\"/><media:content url=\\\"https://content.capi-stage.newscorp.com/images/3a4d3b5cfb6acd86ac86a922bc5321cd?combo2to1=1200\\\"></media:content><g:timeline><g:timeline_item publish_time=\\\"2021-06-28T21:33:16.395Z\\\">Mum-of-22 Sue Radford splashes out on lavish</g:timeline_item><g:timeline_item publish_time=\\\"2021-06-28T21:29:17.315Z\\\">Towie's Georgia Kousoulou praised by fans as she </g:timeline_item><g:timeline_item publish_time=\\\"2021-06-28T21:29:15.783Z\\\">Mum, 33, left homeless after £2.99 B&amp;M wax burner</g:timeline_item></g:timeline></entry>\",\n    \"user\": \"johndue@gmail.com\",\n    \"domain\": \"http://news-showcase-develop.showcase.newspress.app\",\n    \"originalArticle\": [\n      {\n        \"mainArticle\": true,\n        \"gcapiId\": \"e2ba4ac95309ae84ed2b371690541d13\",\n        \"title\": \"Maya Jama pictured leaving restaurant with rumoured love interest NBA star Ben Simmons\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"d8e41fab4a64d2f8b8cb3df45a07dd66\",\n        \"title\": \"Mum-of-22 Sue Radford splashes out on lavish\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"df1eebc071e56405404fb0f7a2b02b79\",\n        \"title\": \"Towie's Georgia Kousoulou praised by fans as she\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"2618864b762942634533c63239abf2fe\",\n        \"title\": \"Mum, 33, left homeless after £2.99 B&M wax burner\"\n      }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/ingest/processors/GSHOWCASE",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"ingest",
										"processors",
										"GSHOWCASE"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ingest Single Story Related Articles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanel\");",
											"    var source = pm.globals.get(\"source\");",
											"    ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var isodate = new Date().toISOString()",
											"pm.globals.set(\"date\", isodate);",
											"",
											"var id = pm.globals.get(\"idPanelRelatedArticles\");",
											"var a = parseInt(id);",
											"",
											"var numRandom = Math.round(Math.random() * 1000000000);",
											"var idfin = a + numRandom;",
											"console.log(\"Id created panel: \" + idfin)",
											"pm.globals.set(\"idPanelRelatedArticles\", idfin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"description": "Default GCAPINP dev Ingestion ApiKey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{idPanelRelatedArticles}}-{{source}}-{{idSite}}\",\n    \"createdDate\": \"{{date}}\",\n    \"updatedDate\": \"{{date}}\",\n    \"publisher\": \"{{source}}\",\n    \"content\": \"<entry><id>https://www.{{source}}.com/sport/horseracing/15431577/hamilton-races-delay-camera-crew-fall/?gid={{idPanelRelatedArticles}}</id><published>{{date}}</published><updated>{{date}}</updated><g:panel type=\\\"SINGLE_STORY\\\">https://www.{{source}}.com/sport/horseracing/15431577/hamilton-races-delay-camera-crew-fall/?gid={{idPanelRelatedArticles}}</g:panel><g:panel_title>Two cameramen in to hospital with 'serious injuries</g:panel_title><g:overline>Two cameramen</g:overline><title>Two cameramen in to hospital with 'serious injuries' after</title><author><name>Callum Jamieson</name></author><link href=\\\"https://www.{{source}}.com/sport/horseracing/15431577/hamilton-races-delay-camera-crew-fall/?gid={{idPanelRelatedArticles}}\\\"/><media:content url=\\\"https://content.capi-stage.newscorp.com/images/ab9ed37a6288450b7e9d9eafb97f5b03?combo2to1=1200\\\"></media:content><summary>Two cameramen in to hospital with 'serious injuries</summary><g:article_group role=\\\"RELATED_CONTENT\\\"><entry><id>https://www.{{source}}.com/news/15436912/navy-warship-bomb-test-florida-miami-experts-disagree/?gid={{idPanelRelatedArticles}}</id><title>Theory says Navy warship 'bomb test</title><link href=\\\"https://www.{{source}}.com/news/15436912/navy-warship-bomb-test-florida-miami-experts-disagree/?gid={{idPanelRelatedArticles}}\\\"/><g:overline>Theory says Navy warship</g:overline><media:content url=\\\"https://content.capi-stage.newscorp.com/images/007109458a60b28a75d1aa27879b1557?combo4to3=1200\\\"></media:content></entry><entry><id>https://www.{{source}}.com/tv/15437080/wendy-williams-slammed-for-dating-married-ray-j/?gid={{idPanelRelatedArticles}}</id><title>Wendy Williams slammed for 'dating'</title><link href=\\\"https://www.{{source}}.com/tv/15437080/wendy-williams-slammed-for-dating-married-ray-j/?gid={{idPanelRelatedArticles}}\\\"/><g:overline>Wendy Williams slammed</g:overline><media:content url=\\\"https://content.capi-stage.newscorp.com/images/9e95b3858e90fc01d08196f8d8c8f68a?combo4to3=1200\\\"></media:content></entry></g:article_group></entry>\",\n    \"user\": \"johndue@gmail.com\",\n    \"domain\": \"http://news-showcase-develop.showcase.newspress.app\",\n    \"originalArticle\": [\n      {\n        \"mainArticle\": true,\n        \"gcapiId\": \"d8e41fab4a64d2f8b8cb3df45a07dd66\",\n        \"title\": \"Two cameramen in to hospital with 'serious injuries' after\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"df1eebc071e56405404fb0f7a2b02b79\",\n        \"title\": \"Theory says Navy warship 'bomb test\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"2618864b762942634533c63239abf2fe\",\n        \"title\": \"Wendy Williams slammed for 'dating'\"\n      }\n    ]\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/ingest/processors/GSHOWCASE",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"ingest",
										"processors",
										"GSHOWCASE"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ingest Rundown",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var isodate = new Date().toISOString()",
											"pm.globals.set(\"date\", isodate);",
											"",
											"var id = pm.globals.get(\"idPanelRundown\");",
											"var a = parseInt(id);",
											"",
											"var numRandom = Math.round(Math.random() * 1000000000);",
											"var idfin = a + numRandom;",
											"console.log(\"Id created panel: \" + idfin)",
											"pm.globals.set(\"idPanelRundown\", idfin);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanel\");",
											"    var source = pm.globals.get(\"source\");",
											"    ",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"description": "Default GCAPINP dev Ingestion ApiKey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\n    \"id\": \"{{idPanelRundown}}-{{source}}-{{idSite}}\",\n    \"createdDate\": \"{{date}}\",\n    \"updatedDate\": \"{{date}}\",\n    \"publisher\":\"{{source}}\",\n    \"content\": \"<entry><id>https://www.{{source}}.com/money/15384003/lenders-refuse-mortgages-self-employed-seiss/?id={{idPanelRundown}}</id><published>{{date}}</published><updated>{{date}}</updated><g:panel type=\\\"RUNDOWN\\\">https://www.{{source}}.com/money/15384003/lenders-refuse-mortgages-self-employed-seiss/?id={{idPanelRundown}}</g:panel><g:panel_title>How taking a Covid grant could ruin your chances of getting a mortgage</g:panel_title><g:article_group role=\\\"RUNDOWN\\\"><entry><id>https://www.{{source}}.com/tvandshowbiz/15386651/how-britney-spears-abuse-exposes-american-system/?id={{idPanelRundown}}</id><published>2021-06-24T21:00:39.000Z</published><updated>2021-06-24T21:21:44.206Z</updated><author><name>Lucy Alderson</name></author><title>How Britney Spears becoming a victim</title><link href=\\\"https://www.{{source}}.com/tvandshowbiz/15386651/how-britney-spears-abuse-exposes-american-system/?id={{idPanelRundown}}\\\"/><media:content url=\\\"https://content.capi-stage.newscorp.com/images/1445f3ccc63f07a0f2a52d46ff5114f2?combo4to3=1200\\\"></media:content></entry><entry><id>https://www.{{source}}.com/tvandshowbiz/celebrities/15387794/britney-spears-sam-asghari-bizarre-cryptic-message-court-testimony/?id={{idPanelRundown}}</id><published>2021-06-24T20:52:15.000Z</published><updated>2021-06-24T21:21:44.182Z</updated><author><name>Justin Lawrence</name></author><title>Britney Spears' boyfriend</title><link href=\\\"https://www.{{source}}.com/tvandshowbiz/celebrities/15387794/britney-spears-sam-asghari-bizarre-cryptic-message-court-testimony/?id={{idPanelRundown}}\\\"/><media:content url=\\\"https://content.capi-stage.newscorp.com/images/135bd0313def4e35d0bc635d7b1f4b09?combo4to3=1200\\\"></media:content></entry><entry><id>https://www.{{source}}.com/news/15371287/hunter-biden-latop-texts-prostitute-chateau-marmon-wife/?id={{idPanelRundown}}</id><published>2021-06-25T13:00:34.000Z</published><updated>2021-06-25T13:21:42.492Z</updated><author><name>Felix Allen</name></author><title>Hunter Biden latest</title><link href=\\\"https://www.{{source}}.com/news/15371287/hunter-biden-latop-texts-prostitute-chateau-marmon-wife/?id={{idPanelRundown}}\\\"/><media:content url=\\\"https://content.capi-stage.newscorp.com/images/b868e7e6337462a4d0163fff285cfc36?combo4to3=1200\\\"></media:content></entry></g:article_group></entry>\",\n    \"user\": \"johndue@gmail.com\",\n    \"domain\": \"http://news-showcase-develop.showcase.newspress.app\",\n    \"originalArticle\": [\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"d8e41fab4a64d2f8b8cb3df45a07dd66\",\n        \"title\": \"How Britney Spears becoming a victim\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"df1eebc071e56405404fb0f7a2b02b79\",\n        \"title\": \"Britney Spears' boyfriend\"\n      },\n      {\n        \"mainArticle\": false,\n        \"gcapiId\": \"2618864b762942634533c63239abf2fe\",\n        \"title\": \"Hunter Biden latest\"\n      }\n    ]\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/ingest/processors/GSHOWCASE",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"ingest",
										"processors",
										"GSHOWCASE"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Consume panels",
					"item": [
						{
							"name": "Consume Bullet Panel",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // var timeOut = pm.globals.get(\"timeOut\");",
											"// var timeOut = 60000;",
											"// setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelBullets\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    let responseData = pm.response.json();",
											"",
											"",
											"    pm.test(\"ID is correct. \"+id+\"\", function () {",
											"    pm.expect(responseData[0].originId).to.contain(id+\"-\"+source);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/shortform/GSHOWCASE/{{idPanelBullets}}-{{source}}-{{idSite}}",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"shortform",
										"GSHOWCASE",
										"{{idPanelBullets}}-{{source}}-{{idSite}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Consume Key Moments Panel",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // var timeOut = pm.globals.get(\"timeOut\");",
											"// var timeOut = 60000;",
											"// setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelKeyMoments\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    let responseData = pm.response.json();",
											"",
											"",
											"    pm.test(\"ID is correct. \"+id+\"\", function () {",
											"    pm.expect(responseData[0].originId).to.contain(id+\"-\"+source);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/shortform/GSHOWCASE/{{idPanelKeyMoments}}-{{source}}-{{idSite}}",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"shortform",
										"GSHOWCASE",
										"{{idPanelKeyMoments}}-{{source}}-{{idSite}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Consume Related Articles Panel",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // var timeOut = pm.globals.get(\"timeOut\");",
											"// var timeOut = 60000;",
											"// setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRelatedArticles\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    let responseData = pm.response.json();",
											"",
											"",
											"    pm.test(\"ID is correct. \"+id+\"\", function () {",
											"    pm.expect(responseData[0].originId).to.contain(id+\"-\"+source);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/shortform/GSHOWCASE/{{idPanelRelatedArticles}}-{{source}}-{{idSite}}",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"shortform",
										"GSHOWCASE",
										"{{idPanelRelatedArticles}}-{{source}}-{{idSite}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Consume Rundown Panel",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// // var timeOut = pm.globals.get(\"timeOut\");",
											"// var timeOut = 60000;",
											"// setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRundown\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    let responseData = pm.response.json();",
											"",
											"",
											"    pm.test(\"ID is correct. \"+id+\"\", function () {",
											"    pm.expect(responseData[0].originId).to.contain(id+\"-\"+source);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/shortform/GSHOWCASE/{{idPanelRundown}}-{{source}}-{{idSite}}",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"shortform",
										"GSHOWCASE",
										"{{idPanelRundown}}-{{source}}-{{idSite}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timeOut = pm.globals.get(\"timeOut\");",
									"setTimeout(function(){}, [timeOut]);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Validate XML on Google's feed",
					"item": [
						{
							"name": "Validate XML Bullets Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelBullets\");",
											"    var source = pm.globals.get(\"source\");",
											"    var date = pm.globals.get(\"date\");",
											"",
											"",
											"    var responseJson = xml2Json(responseBody);",
											"    var idxml = responseJson[\"feed\"][\"entry\"][3][\"id\"];",
											"    var datexml = responseJson[\"feed\"][\"updated\"];",
											"",
											"",
											"    pm.test(\"ID is correct.\"+idxml+\"\", function () {",
											"    pm.expect(idxml).to.contain(\"=\"+id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var timeOut = pm.environment.get(\"timeOut\");",
											"setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/gshowcase?includeBody=true&maxitems=4&searchCategory=/{{source}}/publisher",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"gshowcase"
									],
									"query": [
										{
											"key": "includeBody",
											"value": "true"
										},
										{
											"key": "maxitems",
											"value": "4"
										},
										{
											"key": "searchCategory",
											"value": "/{{source}}/publisher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate XML Key Moments Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelKeyMoments\");",
											"    var source = pm.globals.get(\"source\");",
											"    var date = pm.globals.get(\"date\");",
											"",
											"",
											"    var responseJson = xml2Json(responseBody);",
											"    var idxml = responseJson[\"feed\"][\"entry\"][2][\"id\"];",
											"    var datexml = responseJson[\"feed\"][\"updated\"];",
											"",
											"",
											"    pm.test(\"ID is correct.\"+idxml+\"\", function () {",
											"    pm.expect(idxml).to.contain(\"=\"+id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var timeOut = pm.environment.get(\"timeOut\");",
											"setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/gshowcase?includeBody=true&maxitems=4&searchCategory=/{{source}}/publisher",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"gshowcase"
									],
									"query": [
										{
											"key": "includeBody",
											"value": "true"
										},
										{
											"key": "maxitems",
											"value": "4"
										},
										{
											"key": "searchCategory",
											"value": "/{{source}}/publisher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate XML Related Articles Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRelatedArticles\");",
											"    var source = pm.globals.get(\"source\");",
											"    var date = pm.globals.get(\"date\");",
											"",
											"",
											"    var responseJson = xml2Json(responseBody);",
											"    var idxml = responseJson[\"feed\"][\"entry\"][1][\"id\"];",
											"    var datexml = responseJson[\"feed\"][\"updated\"];",
											"",
											"",
											"    pm.test(\"ID is correct.\"+idxml+\"\", function () {",
											"    pm.expect(idxml).to.contain(\"=\"+id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var timeOut = pm.environment.get(\"timeOut\");",
											"setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/gshowcase?includeBody=true&maxitems=4&searchCategory=/{{source}}/publisher",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"gshowcase"
									],
									"query": [
										{
											"key": "includeBody",
											"value": "true"
										},
										{
											"key": "maxitems",
											"value": "4"
										},
										{
											"key": "searchCategory",
											"value": "/{{source}}/publisher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate XML Rundown Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRundown\");",
											"    var source = pm.globals.get(\"source\");",
											"    var date = pm.globals.get(\"date\");",
											"",
											"",
											"    var responseJson = xml2Json(responseBody);",
											"    var idxml = responseJson[\"feed\"][\"entry\"][0][\"id\"];",
											"    var datexml = responseJson[\"feed\"][\"updated\"];",
											"",
											"",
											"    pm.test(\"ID is correct.\"+idxml+\"\", function () {",
											"    pm.expect(idxml).to.contain(\"=\"+id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var timeOut = pm.environment.get(\"timeOut\");",
											"setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/gshowcase?includeBody=true&maxitems=4&searchCategory=/{{source}}/publisher",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"gshowcase"
									],
									"query": [
										{
											"key": "includeBody",
											"value": "true"
										},
										{
											"key": "maxitems",
											"value": "4"
										},
										{
											"key": "searchCategory",
											"value": "/{{source}}/publisher"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Kill Panels",
					"item": [
						{
							"name": "Kill Bullets Panel",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelBullets\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    var jsonResponse = pm.response.json();",
											"    var message = jsonResponse.message;",
											"",
											"    pm.test(\"ID is correct\", function () {",
											"    pm.expect(message).to.contain(id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Killing article {{idPanelBullets}}-{{source}}-{{idSite}}\",\n    \"origin\": \"GSHOWCASE\",\n    \"originId\": \"{{idPanelBullets}}-{{source}}-{{idSite}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/legal/kill/",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"legal",
										"kill",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Kill Key Moments Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelKeyMoments\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    var jsonResponse = pm.response.json();",
											"    var message = jsonResponse.message;",
											"",
											"    pm.test(\"ID is correct\", function () {",
											"    pm.expect(message).to.contain(id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Killing article {{idPanelKeyMoments}}-{{source}}-{{idSite}}\",\n    \"origin\": \"GSHOWCASE\",\n    \"originId\": \"{{idPanelKeyMoments}}-{{source}}-{{idSite}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/legal/kill/",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"legal",
										"kill",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Kill Related Articles Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRelatedArticles\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    var jsonResponse = pm.response.json();",
											"    var message = jsonResponse.message;",
											"",
											"    pm.test(\"ID is correct\", function () {",
											"    pm.expect(message).to.contain(id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Killing article {{idPanelRelatedArticles}}-{{source}}-{{idSite}}\",\n    \"origin\": \"GSHOWCASE\",\n    \"originId\": \"{{idPanelRelatedArticles}}-{{source}}-{{idSite}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/legal/kill/",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"legal",
										"kill",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Kill Rundown Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRundown\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    var jsonResponse = pm.response.json();",
											"    var message = jsonResponse.message;",
											"",
											"    pm.test(\"ID is correct\", function () {",
											"    pm.expect(message).to.contain(id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Killing article {{idPanelRundown}}-{{source}}-{{idSite}}\",\n    \"origin\": \"GSHOWCASE\",\n    \"originId\": \"{{idPanelRundown}}-{{source}}-{{idSite}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/legal/kill/",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"legal",
										"kill",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Restore Panels",
					"item": [
						{
							"name": "Restore Bullets Panel",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [4000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelBullets\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    var jsonResponse = pm.response.json();",
											"    var message = jsonResponse.message;",
											"",
											"    pm.test(\"ID is correct\", function () {",
											"    pm.expect(message).to.contain(id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Restoring article {{idPanelBullets}}-{{source}}-{{idSite}}\",\n    \"origin\": \"GSHOWCASE\",\n    \"originId\": \"{{idPanelBullets}}-{{source}}-{{idSite}}\",\n    \"forceActivate\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/legal/restore/",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"legal",
										"restore",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Key Moments Panel",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [4000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelKeyMoments\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    var jsonResponse = pm.response.json();",
											"    var message = jsonResponse.message;",
											"",
											"    pm.test(\"ID is correct\", function () {",
											"    pm.expect(message).to.contain(id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Restoring article {{idPanelKeyMoments}}-{{source}}-{{idSite}}\",\n    \"origin\": \"GSHOWCASE\",\n    \"originId\": \"{{idPanelKeyMoments}}-{{source}}-{{idSite}}\",\n    \"forceActivate\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/legal/restore/",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"legal",
										"restore",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Related Articles Panel",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [4000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRelatedArticles\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    var jsonResponse = pm.response.json();",
											"    var message = jsonResponse.message;",
											"",
											"    pm.test(\"ID is correct\", function () {",
											"    pm.expect(message).to.contain(id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Restoring article {{idPanelRelatedArticles}}-{{source}}-{{idSite}}\",\n    \"origin\": \"GSHOWCASE\",\n    \"originId\": \"{{idPanelRelatedArticles}}-{{source}}-{{idSite}}\",\n    \"forceActivate\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/legal/restore/",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"legal",
										"restore",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Rundown Panel",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [4000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRundown\");",
											"    var source = pm.globals.get(\"source\");",
											"",
											"    var jsonResponse = pm.response.json();",
											"    var message = jsonResponse.message;",
											"",
											"    pm.test(\"ID is correct\", function () {",
											"    pm.expect(message).to.contain(id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{ingestion_api_key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Restoring article {{idPanelRundown}}-{{source}}-{{idSite}}\",\n    \"origin\": \"GSHOWCASE\",\n    \"originId\": \"{{idPanelRundown}}-{{source}}-{{idSite}}\",\n    \"forceActivate\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{base_url}}/legal/restore/",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"legal",
										"restore",
										""
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timeOut = pm.globals.get(\"timeOut\");",
									"setTimeout(function(){}, [timeOut]);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Validate XML on Google's",
					"item": [
						{
							"name": "Validate XML Bullets Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelBullets\");",
											"    var source = pm.globals.get(\"source\");",
											"    var date = pm.globals.get(\"date\");",
											"",
											"",
											"    var responseJson = xml2Json(responseBody);",
											"    var idxml = responseJson[\"feed\"][\"entry\"][3][\"id\"];",
											"    var datexml = responseJson[\"feed\"][\"updated\"];",
											"",
											"",
											"    pm.test(\"ID is correct.\"+idxml+\"\", function () {",
											"    pm.expect(idxml).to.contain(\"=\"+id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var timeOut = pm.environment.get(\"timeOut\");",
											"setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/gshowcase?includeBody=true&maxitems=4&searchCategory=/{{source}}/publisher",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"gshowcase"
									],
									"query": [
										{
											"key": "includeBody",
											"value": "true"
										},
										{
											"key": "maxitems",
											"value": "4"
										},
										{
											"key": "searchCategory",
											"value": "/{{source}}/publisher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate XML Key Moments Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelKeyMoments\");",
											"    var source = pm.globals.get(\"source\");",
											"    var date = pm.globals.get(\"date\");",
											"",
											"",
											"    var responseJson = xml2Json(responseBody);",
											"    var idxml = responseJson[\"feed\"][\"entry\"][2][\"id\"];",
											"    var datexml = responseJson[\"feed\"][\"updated\"];",
											"",
											"",
											"    pm.test(\"ID is correct.\"+idxml+\"\", function () {",
											"    pm.expect(idxml).to.contain(\"=\"+id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var timeOut = pm.environment.get(\"timeOut\");",
											"setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/gshowcase?includeBody=true&maxitems=4&searchCategory=/{{source}}/publisher",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"gshowcase"
									],
									"query": [
										{
											"key": "includeBody",
											"value": "true"
										},
										{
											"key": "maxitems",
											"value": "4"
										},
										{
											"key": "searchCategory",
											"value": "/{{source}}/publisher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate XML Related Articles Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRelatedArticles\");",
											"    var source = pm.globals.get(\"source\");",
											"    var date = pm.globals.get(\"date\");",
											"",
											"",
											"    var responseJson = xml2Json(responseBody);",
											"    var idxml = responseJson[\"feed\"][\"entry\"][1][\"id\"];",
											"    var datexml = responseJson[\"feed\"][\"updated\"];",
											"",
											"",
											"    pm.test(\"ID is correct.\"+idxml+\"\", function () {",
											"    pm.expect(idxml).to.contain(\"=\"+id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var timeOut = pm.environment.get(\"timeOut\");",
											"setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/gshowcase?includeBody=true&maxitems=4&searchCategory=/{{source}}/publisher",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"gshowcase"
									],
									"query": [
										{
											"key": "includeBody",
											"value": "true"
										},
										{
											"key": "maxitems",
											"value": "4"
										},
										{
											"key": "searchCategory",
											"value": "/{{source}}/publisher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate XML Rundown Panel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    var id = pm.globals.get(\"idPanelRundown\");",
											"    var source = pm.globals.get(\"source\");",
											"    var date = pm.globals.get(\"date\");",
											"",
											"",
											"    var responseJson = xml2Json(responseBody);",
											"    var idxml = responseJson[\"feed\"][\"entry\"][0][\"id\"];",
											"    var datexml = responseJson[\"feed\"][\"updated\"];",
											"",
											"",
											"    pm.test(\"ID is correct.\"+idxml+\"\", function () {",
											"    pm.expect(idxml).to.contain(\"=\"+id);",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var timeOut = pm.environment.get(\"timeOut\");",
											"setTimeout(function(){}, [timeOut]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{consumption_api_key}}"
									}
								],
								"url": {
									"raw": "https://{{base_url}}/content/articles/gshowcase?includeBody=true&maxitems=4&searchCategory=/{{source}}/publisher",
									"protocol": "https",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"content",
										"articles",
										"gshowcase"
									],
									"query": [
										{
											"key": "includeBody",
											"value": "true"
										},
										{
											"key": "maxitems",
											"value": "4"
										},
										{
											"key": "searchCategory",
											"value": "/{{source}}/publisher"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timeOut = pm.globals.get(\"timeOut\");",
									"setTimeout(function(){}, [timeOut]);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Production Smoke Test",
			"item": [
				{
					"name": "Google's Feed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"    var responseJson = xml2Json(responseBody);",
									"    var url = responseJson[\"feed\"][\"id\"];",
									"",
									"    var urlGET = pm.request.url.toString();",
									"",
									"    pm.test(\"Url is right for google pub.\", function () {",
									"    pm.expect(url).to.eq(urlGET);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/content/articles/gshowcase?dateFilter=dateUpdated&dateSort=dateUpdated&daysback=10&includeBody=true&maxitems=75&searchCategory=/{{origins}}/publisher",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"content",
								"articles",
								"gshowcase"
							],
							"query": [
								{
									"key": "dateFilter",
									"value": "dateUpdated"
								},
								{
									"key": "dateSort",
									"value": "dateUpdated"
								},
								{
									"key": "daysback",
									"value": "10"
								},
								{
									"key": "includeBody",
									"value": "true"
								},
								{
									"key": "maxitems",
									"value": "75"
								},
								{
									"key": "searchCategory",
									"value": "/{{origins}}/publisher"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get articles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var noItems = pm.environment.get(\"noItems\");",
									"var a = parseInt(noItems);",
									"",
									"var idfin = a + 1;",
									"pm.environment.set(\"noItems\", idfin);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"    var jsonResponse = pm.response.json();",
									"    var dateUpdatedResponse = jsonResponse[0].dateUpdated;",
									"    var isodateNow = new Date().toISOString()",
									"",
									"",
									"    const now = new Date(isodateNow);",
									"    const updated = new Date(dateUpdatedResponse);",
									"",
									"    const diferenciaEnMilisegundos = now - updated;",
									"",
									"    const horasDiferencia = diferenciaEnMilisegundos / (1000 * 60 * 60);",
									"    const hoursAgo = Math.round(horasDiferencia);",
									"",
									"",
									"    pm.test(\"Last updated was \" + hoursAgo + \" hours ago\", function () {",
									"    pm.expect(hoursAgo).to.be.at.most(18);",
									"",
									"    });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{consumption_api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{base_url}}/content/articles/shortform/{{origins}}",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"content",
								"articles",
								"shortform",
								"{{origins}}"
							],
							"query": [
								{
									"key": "maxitems",
									"value": "100",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "200",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}